pipeline 
{
    agent any

    stages 
    {
        stage('Donnload the Source code') 
        {
            steps 
            {
                echo '--------------------X Downloading the Source code X---------------'
                git 'https://github.com/sai-kadinti/intelliQ-MavenJava.git'
                sh 'ls -lrth'
                sh 'pwd'
            }
        }

        stage('Scan the Source code') 
        {
            steps 
            {
                echo '--------------------X Scanning the Source code X---------------'
                sh 'ls -lrth'
                sh ''' mvn sonar:sonar \\
                        -Dsonar.host.url=http://52.91.35.192:9000/ \\
                        -Dsonar.login=sqa_6c95e14685ebe41e101be7dd8480b48cec3480ca'''
            }
        }
        stage('Build the Source code') 
        {
            steps 
            {
                echo '--------------------X Building the Source code X---------------'
                sh 'mvn clean package'
                sh 'ls -lrth'
            }
        }
        stage('Deploy the .war file') 
        {
            steps 
            {
                echo '--------------------X Deploying the war file X---------------'
                deploy adapters: [tomcat9(credentialsId: '0c8a3398-6cf4-4e78-8471-1ac26211bba0', path: '', url: 'http://3.87.68.54:9090/')], contextPath: 'qa1', war: '**/*.war'
            }
        }

        stage('Copy .war file') 
        {
            steps 
            {
                echo '--------------------X Building the war file X---------------'
                sh 'sudo cp /var/lib/jenkins/workspace/${JOB_NAME}/webapp/target/webapp.war /var/lib/jenkins/workspace/${JOB_NAME}/'
            }
        }
        
        stage('Build Docker image') 
        {
            steps 
            {
                echo '--------------------X Building the docker image code X---------------'
                sh 'docker build -f /var/lib/jenkins/workspace/${JOB_NAME}//Dockerfile -t kadintisai/java-app:${BUILD_NUMBER} .'
            }
        }

        stage('Push Docker image') 
        {
            steps 
            {
                echo '--------------------X Building the docker image code X---------------'
                withCredentials([string(credentialsId: 'docker_pwd', variable: 'docker_pwd')]) 
                {
                    sh 'docker login -u kadintisai -p ${docker_pwd}'
                }
                sh 'docker push kadintisai/java-app:${BUILD_NUMBER}'
            }
        }

        stage('Run Docker image') 
        {
            steps 
            {
                echo '--------------------X Building the docker image code X---------------'
                sh 'docker rm -f javaapp'
                sh 'docker run --name javaapp -p 9999:8080 -d kadintisai/java-app:${BUILD_NUMBER}'
            }
        }
        
    }
}
